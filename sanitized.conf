##Odoo Backend##

upstream odooerp {
    server 127.0.0.1:8069;
}
upstream odooerp-im {
    server 127.0.0.1:8072 weight=1 fail_timeout=0;
}


##https site##
server {
    listen      443 ssl http2;
	
    server_name @@FQDN@@@@WWW@@;
	
    root        /usr/share/nginx/html;
    index       index.html index.htm;

    # log files
    access_log  /var/log/nginx/odoo.access.log;
    error_log   /var/log/nginx/odoo.error.log;

    # SSL
	ssl_certificate /etc/letsencrypt/live/@@FQDN@@/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/@@FQDN@@/privkey.pem;
	ssl_trusted_certificate /etc/letsencrypt/live/@@FQDN@@/chain.pem;

    # proxy buffers
    proxy_buffers 16 64k;
    proxy_buffer_size 128k;

    # timeouts
    proxy_read_timeout 720s;
    proxy_connect_timeout 720s;
    proxy_send_timeout 720s;

    ## odoo proxypass with https ##
    location ~* / {
        proxy_pass  http://odooerp;
        # force timeouts if the backend dies
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_redirect off;

        # set headers
        proxy_set_header    Host            $host;
        proxy_set_header    X-Real-IP       $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto https;
    }


    # cache some static data in memory for 60mins
    location ~* /web/static/ {
        proxy_cache_valid 200 60m;
        proxy_buffering on;
        expires 864000;
        proxy_pass http://odooerp;
    }
	
	location ~* /longpolling {
       proxy_pass http://odooerp-im;
   }
    
	
	
	include /etc/nginx/nginxconfig.io/general.conf;

}

##http redirects to https ##
server {
    listen      80;
    server_name @@FQDN@@@@WWW@@;
    
	include /etc/nginx/nginxconfig.io/letsencrypt.conf;
    
    location / {
        return 301 https://$server_name$request_uri;
    }
}
